set.seed(0)
N=50
smokers=sample(dat$bwt[dat$smoke==1],N)
nonsmokers=sample(dat$bwt[dat$smoke==0],N)
obs=median(smokers)-median(nonsmokers)
#use permutations to see if this difference is significant
#sample from total smokers and non smokers to get two random groups of 50
avgdiff<-sapply(1:1000,function(i){
all=sample(c(smokers,nonsmokers))
smokersstar=all[1:N] #randomly sample
nonsmokersstar=all[(N+1):(2*N)] #randomly sample
return(median(smokersstar)-median(nonsmokersstar))
})
hist(avgdiff)
abline(v=obs)
print(median(abs(avgdiff) > abs(obs)))
babies = read.table("babies.txt", header=TRUE)
N=50
smokers=sample(dat$bwt[dat$smoke==1],N)
nonsmokers=sample(dat$bwt[dat$smoke==0],N)
dat=read.table("http://www.biostat.jhsph.edu/bstcourse/bio751/data/babies.data",header=TRUE)
N=50
smokers=sample(dat$bwt[dat$smoke==1],N)
nonsmokers=sample(dat$bwt[dat$smoke==0],N)
obs=median(smokers)-median(nonsmokers)
#use permutations to see if this difference is significant
#sample from total smokers and non smokers to get two random groups of 50
avgdiff<-sapply(1:1000,function(i){
all=sample(c(smokers,nonsmokers))
smokersstar=all[1:N] #randomly sample
nonsmokersstar=all[(N+1):(2*N)] #randomly sample
return(median(smokersstar)-median(nonsmokersstar))
})
hist(avgdiff)
abline(v=obs)
print(median(abs(avgdiff) > abs(obs)))
avgdiff
smokersstar
all=sample(c(smokers,nonsmokers)
)
smokersstar=all[1:N] #randomly sample
nonsmokersstar=all[(N+1):(2*N)] #randomly sample
return(median(smokersstar)-median(nonsmokersstar))
median(smokersstar)-median(nonsmokersstar)
smokersstar
median(smokersstar)
median(nonsmokersstar)
all
all
dat=read.table("http://www.biostat.jhsph.edu/bstcourse/bio751/data/babies.data",header=TRUE)
N=50
smokers=sample(dat$bwt[dat$smoke==1],N)
nonsmokers=sample(dat$bwt[dat$smoke==0],N)
obs=median(smokers)-median(nonsmokers)
#use permutations to see if this difference is significant
#sample from total smokers and non smokers to get two random groups of 50
avgdiff<-sapply(1:1000,function(i){
all=sample(c(smokers,nonsmokers))
smokersstar=all[1:N] #randomly sample
nonsmokersstar=all[(N+1):(2*N)] #randomly sample
return(median(smokersstar)-median(nonsmokersstar))
})
hist(avgdiff)
abline(v=obs)
print(median(abs(avgdiff) > abs(obs)))
all
dat=read.table("http://www.biostat.jhsph.edu/bstcourse/bio751/data/babies.data",header=TRUE)
N=50
smokers=sample(dat$bwt[dat$smoke==1],N)
nonsmokers=sample(dat$bwt[dat$smoke==0],N)
obs=median(smokers)-median(nonsmokers)
#use permutations to see if this difference is significant
#sample from total smokers and non smokers to get two random groups of 50
avgdiff<-sapply(1:1000,function(i){
all=sample(c(smokers,nonsmokers))
smokersstar=all[1:N] #randomly sample
nonsmokersstar=all[(N+1):(2*N)] #randomly sample
return(median(smokersstar)-median(nonsmokersstar))
})
hist(avgdiff)
abline(v=obs)
print(median(abs(avgdiff) > abs(obs)))
all=sample(c(smokers,nonsmokers))
smokersstar=all[1:N] #randomly sample
nonsmokersstar=all[(N+1):(2*N)] #randomly sample
median(smokersstar)-median(nonsmokersstar)
avgdiff<-sapply(1:1000,function(i){
all=sample(c(smokers,nonsmokers))
smokersstar=all[1:N] #randomly sample
nonsmokersstar=all[(N+1):(2*N)] #randomly sample
return(median(smokersstar)-median(nonsmokersstar))
})
avgdiff
obs=median(smokers)-median(nonsmokers)
abs(avgdiff)
median(abs(avgdiff))
print(median(abs(avgdiff) > abs(obs)))
print(median(abs(avgdiff) > abs(obs)))
library(UsingR)
x=father.son$fheight
install.packages("UsingR")
library(UsingR)
x=father.son$fheight
hist(x,breaks=seq(floor(min(x)),ceiling(max(x))),
main="Height histogram",xlab="Height in inches")
xs<-seq(floor(min(x)),ceiling(max(x)),0,1) #xs is just a sequence of increasing numbers for heights
plot(xs,ecdf(x)(xs),type="l",
xlab="Height in inches",ylab="F(x)") #ecdf - cumulative distribution funciton for x using xs as points to calc
xs<-seq(floor(min(x)),ceiling(max(x)),0.1) #xs is just a sequence of increasing numbers for heights
plot(xs,ecdf(x)(xs),type="l",
xlab="Height in inches",ylab="F(x)") #ecdf - cumulative distribution funciton for x using xs as points to calc
mean(x>70)
1-pnorm(70,mean(x),sd(x))
ps <-seq(0.01,0.99,0.01)
qs <-quantile(x,ps)
normalqs <-qnorm(ps,mean(x),sd(x))
#compare manually calculated quantiles with normal distribution quantiles to see how well data fits normal
plot(normalqs, qs, xlab="Normal percentiles",ylab="Height")
abline(0,1)
plot(normalqs, qs, xlab="Normal percentiles",ylab="Height percentiles")
abline(0,1)
qqnorm(x)
qqline(x)
load("skew.RData")
dim(dat)
par(mfrow = c(3,3))
?sapply
load("skew.RData")
dim(dat)
#set up 3X3 plots
par(mfrow = c(3,3))
#compare each column to normal dist
for (i in 1:9) {
a<-qqnorm(data[,i])
qqplot(a)
qqline(a)
}
for (i in 1:9) {
a<-qqnorm(dat[,i])
qqplot(a)
qqline(a)
}
load("skew.RData")
dim(dat)
#set up 3X3 plots
par(mfrow = c(3,3))
#compare each column to normal dist
for (i in 1:9) {
a<-qqnorm(dat[,i])
qqplot(a)
qqline(a)
}
a<-qqnorm(dat[,1])
qqplot(a)
a
dat[1:5,]
dat[1:5,1]
qqnorm(dat[,1])
for (i in 1:9) {
qqnorm(dat[,i])
qqline(dat[,i])
}
#assignment
load("skew.RData")
dim(dat)
#set up 3X3 plots
par(mfrow = c(3,3))
#compare each column to normal dist
for (i in 1:9) {
qqnorm(dat[,i])
qqline(dat[,i])
}
head(InsectSprays)
boxplot(split(InsectSprays$count, InsectSprays$spray))
boxplot(InsectSprays$count ~ InsectSprays$spray)
plot(x,y,xlab="Father's height in inches",ylab="Son's height in inches",
main=paste("correlation =",signif(cor(x,y)2)))
plot(x,y,xlab="Father's height in inches",ylab="Son's height in inches",
main=paste("correlation =",signif(cor(x,y),2)))
x=father.son$fheight
y=father.son$sheight
plot(x,y,xlab="Father's height in inches",ylab="Son's height in inches",
main=paste("correlation =",signif(cor(x,y),2)))
boxplot(split(y,round(x)))
print(mean(y[ round(x) == 72]))
boxplot(split(y,round(x)))
print(mean(y[ round(x) == 72]))
x=(x-mean(x))/sd(x)
y=(y-mean(y))/sd(y)
means=tapply(y,round(x*4)/4,mean)
means
fatherheights=as.numeric(names(means))
plot(fatherheights,means,ylab="average of strata of son heights",ylim=range(fatherheights))
abline(0,cor(x,y))
plot(father.son$fheight, father.son$sheight)
cor(father.son$fheight, father.son$sheight)
identify(father.son$fheight, father.son$sheight)
x = father.son$fheight
y = father.son$sheight
n = nrow(father.son)
plot(scale(x), scale(y))
abline(h=0, v=0)
mean(scale(x)*scale(y))
library(UsingR)
data(nym.2002)
nead(nym.2002)
head(nym.2002)
hist(nym.2002$time)
plot(nym.2002$age,nym.2002$time)
plot(nym.2002$time,nym.2002$place)
qqnorm(nym.2002$time,nym)
qqnorm(nym.2002$time)
abline(0,1)
cor(father.son$fheight, father.son$sheight)
abline(1,1)
tail(sort(table(nym.2002$home)),10)
boxplot(tail(sort(table(nym.2002$home)),10))
plot(tail(sort(table(nym.2002$home)),10))
barplot(tail(sort(table(nym.2002$home)),10))
?boxplot
boxplot(nym.2002$time ~ nym.2002$gender)
time = sort(nym.2002$time)
time
max(time)
min(time)
min(time)/median(time)
max(time)/median(time)
plot(time/median(time), ylim=c(1/4,4))
abline(h=c(1/2,1,2))
plot(log2(time/median(time)),ylim=c(-2,2))
abline(h=-1:1)
install.packages("dplyr")
library(dplyr)
msleep<-read.csv("https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/msleep_ggplot2.csv")
msleep<-read.csv("msleep_ggplot2.csv")
sleepData<-select(msleep,name,sleep_total)
head(select(msleep,-name))
head(select(msleep,starts_with("sl")))
filter(msleep,sleep_total >= 16)
filter(msleep,sleep_total >= 16, bodywt >= 1)
#select(msleep,name,sleep_total)
msleep %>%
select(name,sleep_total)%>%
head
msleep %>% arrange(order) %>% head
msleep %>%
select(name,order,sleep_total) %>%
arrange(order, sleep_total) %>%
head
filter(sleep_total >= 16)
msleep %>%
select(name,order,sleep_total) %>%
arrange(order, sleep_total) %>%
filter(sleep_total >= 16)
msleep %>%
select(name,order,sleep_total) %>%
arrange(order, desc(sleep_total)) %>%
filter(sleep_total >= 16)
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
head
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total,
bodywt_grams=bodywt*1000) %>%
head
msleep %>%
summarise(avg_sleep=mean(sleep_total))
msleep %>%
group_by(order)%>%
summarise(avg_sleep=mean(sleep_total),
min_sleep=min(sleep_total),
max_sleep=max(sleep_total),
total=n())
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion))
arrange(median_REMprop)
head
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
a<-summarise(median_REMprop=median(rem_proportion))
arrange(a,median_REMprop)
head
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion))
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion))
mutate(median_REMprop=median(rem_proportion))
arrange(median_REMprop)
head
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion))
mutate(median_REMprop=median(rem_proportion))
mutate(median_REMprop = median(rem_proportion))
mutate(rem_proportion = sleep_rem/sleep_total) %>%
d
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion)) %>%
mutate(median_REMprop = median(rem_proportion)) %>%
arrange(median_REMprop) %>%
head
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total)
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order)
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion))
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion)) %>%
mutate(median_REMprop = median(rem_proportion))
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion)) %>%
arrange(median_REMprop)
msleep %>%
mutate(rem_proportion = sleep_rem/sleep_total) %>%
group_by(order) %>%
summarise(median_REMprop=median(rem_proportion)) %>%
arrange(median_REMprop) %>%
head
data(ChickWeight)
data(ChickWeight)
plot(ChickWeight$Time, ChickWeight$weight, col=ChickWeight$Diet)
head(ChickWeight)
chick = reshape(ChickWeight,idvar=c("Chick","Diet"),timevar="Time",direction="wide")
chick = reshape(ChickWeight,idvar=c("Chick","Diet"),timevar="Time",direction="wide")
head(chick)
chick = na.omit(chick)
chick
day4<-chick$weight.4
day4<-c(chick$weight.4,3000)
day4<-chick$weight.4
day4out<-c(chick$weight.4,3000)
mean(day4out)-mean(day4)
mean(day4out)/mean(day4)
median(day4out)/median(day4)
sd(day4out)/sd(day4)
plot(chick$weight.4,chick$weight.21)
day21<-chick$weight.21
day21out<-c(chick$weight.21,3000)
sd(day4out)/sd(day4)
cor(day4,day21)/cor(day4out,day21out)
plot(chick$weight.4,chick$weight.21)
cor(day4,day21)/cor(day4out,day21out)
cor(day4,day21)
cor(day4out,day21out)
cor(day4out,day21out)/cor(day4,day21)
data(ChickWeight)
chick <- reshape(ChickWeight,idvar=c("Chick","Diet"),timevar="Time",direction="wide")
chick <- na.omit(chick)
stripchart(chick$weight.4 ~ chick$Diet, method="jitter", vertical=TRUE)
chick
head(chick)
diet1day4<-chick$weight.4[chick$Diet==1]
x<-chick$weight.4[chick$Diet==1]
x
x<-chick$weight.4[chick$Diet==1]
y<-chick$weight.4[chick$Diet==4]
ttest(x,y)
t.test(x,y)
wilcox.test(x,y)
z<-c(x,200)
t.test(z,y)
t.test(z,y)$p.value
par(mfrow=c(1,3))
boxplot(x,y)
boxplot(x,y+10)
boxplot(x,y+100)
jfs['']
par(mfrow=c(1,3))
boxplot(x,y)
boxplot(x,y+10)
boxplot(x,y+100)
a<-c(y,10)
b<-c(y,100)
t.test(x,a)$statistic - t.test(x,b)$statistic
a<-y+10
b<-y+100
t.test(x,a)$statistic - t.test(x,b)$statistic
install.packages("UsingR")
library(UsingR)
?father.son
?father.son
dat<-data(father.son)
dat
data(father.son)
fheight
library(UsingR)
?father.son
father.son
dat<-father.son
head(dat)
average(dat$sheight)
mean(dat$sheight)
?round
sons<-dat[round(dat$fheight,0)==71]
sons<-dat[round(dat$fheight,0)==71,]
head(sons)
mean(sons$sheight)
X<-cbind(x1=tt,x2=tt^2)
X = matrix(1:1000,100,10)
X[25,3]
x=1:10
M=cbind(x,2*x,3*x,4*x,5*x)
M
sum(M[7,])
?matrix
a=matrix(1:60,20,3)
a
a=matrix(1:60,20,3,byrow=TRUE)
a
X<-matrix(c(1,3,2,1,-2,1,1,1,-1),3,3)
y<-matrix(c(6,2,1)3,1)
solve(X)%*%y
X<-matrix(c(1,3,2,1,-2,1,1,1,-1),3,3)
y<-matrix(c(6,2,1),3,1)
solve(X)%*%y
X<-matrix(c(3,4,-5,1,2,2,2,-1,1,-1,5,-5,5,0,0,1),4,4,byrow=TRUE)
Y<-matric(c(10,5,7,4),4,1)
Y<-matrix(c(10,5,7,4),4,1)
X
solve(X)%*%Y
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
dim(a)
dim(b)
c=a%*%b
c[3,2]
d<-c[3,]
e<-c[,2]
d*e
d
e
d<-a[3,]
e<-b[,2]
d*e
f=d*e
sum(f)
#using object falling from tower of pisa as example
g<-9.8
n<-25
tt<-seq(0,3.4,len=n)
f<-56.67+0*tt-0.5*g*tt^2
#add an observational error term
y<-f+rnorm(n,sd=1)
plot(x,y,xlab="Time in seconds",ylab="Distance in meters")
g<-9.8
n<-25
tt<-seq(0,3.4,len=n)
f<-56.67+0*tt-0.5*g*tt^2
#add an observational error term
y<-f+rnorm(n,sd=1)
plot(tt,y,xlab="Time in seconds",ylab="Distance in meters")
lines(tt,f,col=2)
rss<-function(Beta0,Beta1,Beta2){
r<-y-(Beta0+Beta1*tt+Beta2*tt^2)
sum(r^2)
}
Beta2s<-seq(-10,0,len=100)
RSS<-sapply(Beta2s,rss,Beta0=55,Beta1=0)
plot(Beta2s,RSS,type="l")
X<-cbind(rep(1,length(tt)),tt,tt^2)
head(X)
Beta<-matrix(c(55,0,5),3,1)
X%*%Beta
Beta<-matrix(c(55,0,5),3,1)
r<-y-X%*%Beta
r<-y-X%*%Beta
RSS<-r(r)%*%r
RSS<-t(r)%*%r
rss(55,0,5)
RSS
RSS<-crossprod(r)
betahat<-solve(t(X)%*%X)) %*% (t(X))
rss(55,0,5)
betahat<-solve(t(X)%*%X)) %*% (t(X)) %*% y
betahat<-solve(t(X)%*%X) %*% (t(X)) %*% y
rss(55,0,5)
betahat
betahat<-solve(crossprox(X)) %*% crossprox(X,y)
betahat<-solve(crossprod(X)) %*% crossprod(X,y)
betahat
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
X
beta <- c(5, 2)
beta <- c(5, 2)
beta
X %*% beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
beta <- c(10,3,-3)
X %*% beta
y
X<-cbind(rep(1,length(tt)),tt,tt^2)
X
